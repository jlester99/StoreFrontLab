@model IEnumerable<DATA.EF.Product>

@{
    ViewBag.Title = "Products";
}

<h2>@ViewBag.Title</h2>


@*
    Implementing DataTables in MVC
    1) make sure your HTML table is well-formed (add the <thead> and <tbody> tags)
    2) <script> in the layout for datatables.js
    3) <link> in the layout for datatables.css
    4) <script> for the datatables function call (in the view - in @section scripts{})

*@

<div class="row-border panel-body panel-primary">
    <form method="get" action="~/Filters/TableViewProducts" class="form-horizontal">
        @*
            Form methods:
            Post - form data is sent in the body of the HttpRequest
            - used typically when creating a record, or sending an email

            Get - form data is sent in the query string in key/value pairs
            - primarily used for searches/filters

        *@
        <div class="form-group">
            <div class="row py-4">

                <div class="col-xs-4  col-sm-2">
                    <input type="text" name="searchFilter" placeholder="Search Products" />
                    </div>
            <div class="col-xs-4 col-sm-2">
                    @Html.DropDownList("CategoryID", null, "Select a Category", htmlAttributes: new { @class = "form-control" })
                </div>

                <div class="col-xs-2 col-sm-2">
                    <input type="submit" value="Search" class="btn btn-primary" />
                </div>
            </div>
    </div>
    </form>
</div>

<table class="table data-table table-striped">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.ProductImage)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.ProductName)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Description)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.UnitPrice)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Category.Description)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.StockStatus.Description)
            </th>
        </tr>
        </thead>
    <tbody>

        @foreach (var item in Model)
        {
        <tr>
            <td>
                <img src="~/Content/assets/img/t_@item.ProductImage" alt="Product image" title="@item.ProductName" />
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.ProductName)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Description)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.UnitPrice)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Category.Description)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.StockStatus.Description)
            </td>
            <td>
                <a href="@Url.Action("Edit", "Products", new { id = item.ProductID })">
                <i class="fa fa-pen-square" aria-hidden="true"></i>
                    </a> <br /> 
                <a href="@Url.Action("Details", "Products", new { id = item.ProductID })">
                    <i class="fa fa-info-circle" aria-hidden="true"></i>
                </a><br />  
                <a href="@Url.Action("Delete", "Products", new { id = item.ProductID })">
                    <i class="fa fa-trash" aria-hidden="true"></i>
                    </a>
            </td>
        </tr>
        } @*end foreach*@
        </tbody>

</table>


@section scripts{
    <script>
        $(document).ready(function () {
            $('.data-table').DataTable();
        });
    </script>
}