@model DATA.EF.Product

@{
    ViewBag.Title = "Edit Product: " + Model.ProductName;
}


<div class="form-horizontal">
    @using (Html.BeginForm("Edit", "Products", FormMethod.Post, new { @enctype = "multipart/form-data" }))
    {
        @Html.AntiForgeryToken()
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.ProductID)

        <div class="formContainer w-50">
    <h4>@ViewBag.Title</h4>
    <hr />
            <div>
                <p>
                    @Html.LabelFor(model => model.ProductName, htmlAttributes: new { @class = "control-label" })
                    @Html.EditorFor(model => model.ProductName, new { htmlAttributes = new { @class = "form-control", placeholder = "Product Name" } })
                    @Html.ValidationMessageFor(model => model.ProductName, "", new { @class = "text-danger" })
                </p>

                @* Image Upload Utility step 8 *@
                <p class="form-group">
                    @Html.LabelFor(model => model.ProductImage, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @*@Html.EditorFor(model => model.ProductImage, new { htmlAttributes = new { @class = "form-control" } })*@
                        <img src="~/Content/assets/img/@Model.ProductImage" style="max-width: 100px;" />
                        <hr />
                        <input type="file" name="prodImage" />
                        @Html.ValidationMessageFor(model => model.ProductImage, "", new { @class = "text-danger" })
                    </div>
                </p>

                <p>
                    @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label" })
                    @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control", placeholder = "Product Name" } })
                    @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
                </p>

                <p>
                    @Html.LabelFor(model => model.CategoryID, htmlAttributes: new { @class = "control-label" })
                    @Html.DropDownList("CategoryID", null, "[Choose A Category]", htmlAttributes: new { @class = "form-control col-md-6" })
                    @Html.ValidationMessageFor(model => model.CategoryID, "", new { @class = "text-danger" })
                </p>

                <p>
                    @Html.LabelFor(model => model.UnitPrice, htmlAttributes: new { @class = "control-label" })
                    @Html.EditorFor(model => model.UnitPrice, new { htmlAttributes = new { @class = "form-control", placeholder = "Price Per Unit" } })
                    @Html.ValidationMessageFor(model => model.UnitPrice, "", new { @class = "text-danger" })
                </p>

                <p>
                    @Html.LabelFor(model => model.StockStatusID, htmlAttributes: new { @class = "control-label" })
                    @Html.DropDownList("StockStatusID", null, "[Choose A Status]", htmlAttributes: new { @class = "form-control col-md-6" })
                    @Html.ValidationMessageFor(model => model.StockStatusID, "", new { @class = "text-danger" })
                </p>

                <p>
                    @Html.LabelFor(model => model.UnitsInStock, htmlAttributes: new { @class = "control-label" })
                    @Html.EditorFor(model => model.UnitsInStock, new { htmlAttributes = new { @class = "form-control", placeholder = "Units In Stock" } })
                    @Html.ValidationMessageFor(model => model.UnitsInStock, "", new { @class = "text-danger" })
                </p>

                <p>
                    @Html.LabelFor(model => model.UnitsOnOrder, htmlAttributes: new { @class = "control-label" })
                    @Html.EditorFor(model => model.UnitsOnOrder, new { htmlAttributes = new { @class = "form-control", placeholder = "Units On Order" } })
                    @Html.ValidationMessageFor(model => model.UnitsOnOrder, "", new { @class = "text-danger" })
                </p>

                <p>
                    @Html.LabelFor(model => model.ShipperID, htmlAttributes: new { @class = "control-label" })
                    @Html.DropDownList("ShipperID", null, "[Choose A Category]", htmlAttributes: new { @class = "form-control col-md-6" })
                    @Html.ValidationMessageFor(model => model.ShipperID, "", new { @class = "text-danger" })
                </p>

                <p>
                    @Html.LabelFor(model => model.SupplierID, htmlAttributes: new { @class = "control-label" })
                    @Html.DropDownList("SupplierID", null, "[Choose A Category]", htmlAttributes: new { @class = "form-control col-md-6" })
                    @Html.ValidationMessageFor(model => model.SupplierID, "", new { @class = "text-danger" })
                </p>

                <p>
                    @Html.LabelFor(model => model.TotalUnitsSold, htmlAttributes: new { @class = "control-label" })
                    @Html.EditorFor(model => model.TotalUnitsSold, new { htmlAttributes = new { @class = "form-control", placeholder = "Units On Order" } })
                    @Html.ValidationMessageFor(model => model.TotalUnitsSold, "", new { @class = "text-danger" })
                </p>

                <p>
                    @Html.LabelFor(model => model.TotalSales, htmlAttributes: new { @class = "control-label" })
                    @Html.EditorFor(model => model.TotalSales, new { htmlAttributes = new { @class = "form-control", placeholder = "Units On Order" } })
                    @Html.ValidationMessageFor(model => model.TotalSales, "", new { @class = "text-danger" })
                </p>
            </div>

            <div class="mb-3">
                <input type="submit" value="Save" class="btn btn-primary" />
            </div>
            <div>
                @Html.ActionLink("Back to List", "TableViewProducts")
            </div>
        </div>

    }

